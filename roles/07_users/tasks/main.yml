---
- name: Create user
  ansible.builtin.user:
    name: "{{ user.name }}"
    comment: "{{ user.full_name }}"
    groups: "{{ user.additional_groups }}"
    append: yes
    shell: "{{ user.shell }}"
    state: present
  become: true

- name: Git config user.name
  community.general.git_config:
    name: user.name
    scope: global
    value: "{{ git.name }}"

- name: Git config user.email
  community.general.git_config:
    name: user.email
    scope: global
    value: "{{ git.email_b64 | b64decode }}"

- name: Git config credential.helper
  community.general.git_config:
    name: credential.helper
    scope: global
    value: "{{ git.helper }}"

- name: Git config pull.rebase
  community.general.git_config:
    name: pull.rebase
    scope: global
    value: "{{ git.rebase }}"

- name: Git config diff.colorMoved
  community.general.git_config:
    name: diff.colorMoved
    scope: global
    value: "{{ git.colorMoved }}"

- name: Git config push.autoSetupRemote
  community.general.git_config:
    name: push.autoSetupRemote
    scope: global
    value: "{{ git.autoSetupRemote }}"

- name: Install Oh My Zsh
  ansible.builtin.git:
    repo: 'https://github.com/ohmyzsh/ohmyzsh.git'
    dest: "/home/{{ user.name }}/.oh-my-zsh"
    clone: yes
    update: yes
    version: master
    depth: 1

- name: Set permissions for ~/.oh-my-zsh
  ansible.builtin.file:
    path: "/home/{{ user.name }}/.oh-my-zsh"
    owner: "{{ user.name }}"
    group: "{{ user.primary_group }}"
    mode: 0750
  become: true

- name: Install Powerlevel10k theme
  ansible.builtin.git:
    repo: 'https://github.com/romkatv/powerlevel10k.git'
    dest: "/home/{{ user.name }}/.oh-my-zsh/custom/themes/powerlevel10k"
    clone: yes
    update: yes
    version: master
    depth: 1

- name: Set permissions for Powerlevel10k
  ansible.builtin.file:
    path: '/home/{{ user.name }}/.oh-my-zsh/custom/themes/powerlevel10k'
    owner: "{{ user.name }}"
    group: "{{ user.primary_group }}"
    mode: 0750
  become: yes

# - name: Install VS Code extensions
#   ansible.builtin.shell: code --install-extension {{ item }}  # noqa command-instead-of-shell
#   with_items: "{{ vscode_extension_list }}"
#   changed_when: no

- name: Set dotfile path var
  ansible.builtin.set_fact:
    dotfiles_path: '/home/{{ user.name }}/code/dotfiles'

- name: Get dotfiles
  ansible.builtin.git:
    repo: https://github.com/carlosherrerascz/dotfiles
    dest: '{{ dotfiles_path }}'
    clone: yes
    update: yes
    version: master

- name: Install end-4's Hyprland dotfiles
  when: desktop == "hyprland"
  ansible.builtin.command: bash <(curl -s "https://end-4.github.io/dots-hyprland-wiki/setup.sh")
  register: cmd_output
  changed_when: cmd_output.rc != 0

- name: Add ~/.config folder
  ansible.builtin.file:
    path: '/home/{{ user.name }}/.config'
    state: directory

- name: Add nvim config
  ansible.builtin.file:
    path: '/home/{{ user.name }}/.config/nvim'
    state: directory

- name: Add vscode config
  ansible.builtin.file:
    path: '/home/{{ user.name }}/.config/Code/User'
    state: directory

- name: Make sure there is no VSCode keybindings file
  ansible.builtin.file:
    path: '/home/{{ user.name }}//.config/Code/User/keybindings.json'
    state: absent

- name: Make sure there is no .bashrc file
  ansible.builtin.file:
    path: '/home/{{ user.name }}//.bashrc'
    state: absent

- name: Symlink dotfiles
  ansible.builtin.file:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    state: link
  with_items:
    - { src: '{{ dotfiles_path }}/shared/.aliases', dest: '/home/{{ user.name }}/.aliases' }
    - { src: '{{ dotfiles_path }}/shared/bash/.bashrc', dest: '/home/{{ user.name }}/.bashrc' }
    - { src: '{{ dotfiles_path }}/shared/zsh/.zshrc', dest: '/home/{{ user.name }}/.zshrc' }
    - { src: '{{ dotfiles_path }}/shared/zsh/.p10k.zsh', dest: '/home/{{ user.name }}/.p10k.zsh' }
    - { src: '{{ dotfiles_path }}/shared/nvim/init.lua', dest: '/home/{{ user.name }}/.config/nvim/init.lua' }
    - { src: '{{ dotfiles_path }}/shared/vscode/keybindings.json', dest: '/home/{{ user.name }}/.config/Code/User/keybindings.json' }
  become: true

# Recommended for practically anyone with a modern computer as they all come
# with multiple cores.
# See https://wiki.archlinux.org/title/makepkg#Parallel_compilation for more details.
- name: Update makepkg configuration file to allow parallel compilation on multi-core/multi-processor systems
  ansible.builtin.template:
    src: makepkg.conf
    dest: "/home/{{ user.name }}/.makepkg.conf"
    backup: no
    owner: "{{ user.name }}"
    group: "{{ user.primary_group }}"
    mode: 0644
  become: true

- name: Mask systemd services - lvm
  ansible.builtin.systemd:
    name: "{{ item }}"
    masked: yes
  become: true
  with_items:
    - lvm2-lvmetad.service
    - lvm2-lvmetad.socket
    - lvm2-monitor.service
  when: disable_lvm

- name: Mask systemd services - systemd homed
  ansible.builtin.systemd:
    name: "{{ item }}"
    masked: yes
  become: true
  with_items:
    - systemd-homed.service
    - systemd-userdbd.service
    - systemd-userdbd.socket
  when: disable_systemd_homed
